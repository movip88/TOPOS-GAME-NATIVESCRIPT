"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nativescript_audio_player_1 = require("nativescript-audio-player");
var TopoComponent = /** @class */ (function () {
    function TopoComponent() {
        this.puntos = 0;
        this.estadoJuego = true;
        this.vidas = Array(5);
        this.id = null;
        this.forats = [];
        this.forat = "forat";
        this.topo = "topo";
        this.tiempo = 0;
        this.altura = 0;
    }
    TopoComponent.prototype.ngOnInit = function () {
    };
    TopoComponent.prototype.iniciarJuego = function () {
        this.estadoJuego = false;
        this.vidas = Array(5);
        this.puntos = 0;
        this.forats = Array(3).fill(this.forat);
        this.tiempo = 650;
        this.altura = 200;
        this.inciarTimer();
        this.audioPlayer = new nativescript_audio_player_1.TNSPlayer();
    };
    TopoComponent.prototype.inciarTimer = function () {
        var _this = this;
        this.id = setInterval(function () {
            if (_this.vidas.length == 0) {
                for (var i = 0; i < _this.forats.length; i++) {
                    _this.forats[i] = _this.forat;
                }
                clearInterval(_this.id);
                _this.estadoJuego = true;
                _this.audioPlayer.initFromFile({
                    audioFile: '~/audio/perder.mp3',
                    loop: false
                });
                _this.audioPlayer.play();
            }
            else {
                var filas = Math.floor(_this.puntos / 100);
                if (_this.puntos > 100 && _this.puntos <= 700 && filas == _this.forats.length / 3) {
                    _this.forats.splice(_this.forats.length - 1, 0, _this.forat, _this.forat, _this.forat);
                    _this.altura += 200;
                    _this.tiempo -= 50;
                    clearInterval(_this.id);
                    _this.inciarTimer();
                }
                var pos = Math.floor(Math.random() * _this.forats.length);
                _this.cambiarEstadoAgujero(pos);
            }
        }, this.tiempo);
    };
    TopoComponent.prototype.cambiarEstadoAgujero = function (pos) {
        //this.forats[pos] = this.forats[pos]=="forat"?"topo":"forat";
        if (this.forats[pos] == this.topo) {
            this.forats[pos] = this.forat;
            if (this.vidas.length > 0) {
                this.vidas.length--;
            }
        }
        else {
            this.forats[pos] = this.topo;
        }
    };
    TopoComponent.prototype.aplastarTopo = function (pos) {
        if (!this.estadoJuego) {
            if (this.forats[pos] == this.topo) {
                this.audioPlayer.initFromFile({
                    audioFile: '~/audio/aplastar.mp3',
                    loop: false
                });
                this.audioPlayer.play();
                this.puntos += 15;
                this.forats[pos] = this.forat;
            }
            else {
                this.audioPlayer.initFromFile({
                    audioFile: '~/audio/fail.mp3',
                    loop: false
                });
                this.audioPlayer.play();
                this.puntos -= 5;
            }
        }
    };
    TopoComponent = __decorate([
        core_1.Component({
            selector: "topos_tag",
            moduleId: module.id,
            templateUrl: "topos.component.html",
            styleUrls: ["topos.component.css"]
        })
    ], TopoComponent);
    return TopoComponent;
}());
exports.TopoComponent = TopoComponent;
//# sourceMappingURL=data:application/json;base64,